import { Selection } from "d3-selection";
import { interfaces } from "powerbi-visuals-utils-formattingutils";
import ITextAsSVGMeasurer = interfaces.ITextAsSVGMeasurer;
import TextProperties = interfaces.TextProperties;
import { IAxisProperties, IMargin } from "./axisInterfaces";
export declare function willLabelsFit(axisProperties: IAxisProperties, availableWidth: number, textMeasurer: ITextAsSVGMeasurer, properties: TextProperties): boolean;
export declare function willLabelsWordBreak(axisProperties: IAxisProperties, margin: IMargin, availableWidth: number, textWidthMeasurer: ITextAsSVGMeasurer, textHeightMeasurer: ITextAsSVGMeasurer, textTruncator: (properties: TextProperties, maxWidth: number) => string, properties: TextProperties): boolean;
export declare const DefaultRotation: {
    sine: number;
    cosine: number;
    tangent: number;
    transform: string;
    dy: string;
};
export declare const DefaultRotationWithScrollbar: {
    sine: number;
    cosine: number;
    tangent: number;
    transform: string;
    dy: string;
};
export declare const DefaultRotationWithScrollbarTickSizeZero: {
    sine: number;
    cosine: number;
    tangent: number;
    transform: string;
    dy: string;
};
/**
 * Perform rotation and/or truncation of axis tick labels (SVG text) with ellipsis
 */
export declare function rotate(labelSelection: Selection<any, any, any, any>, maxBottomMargin: number, textTruncator: (properties: TextProperties, maxWidth: number) => string, textProperties: TextProperties, needRotate: boolean, needEllipsis: boolean, axisProperties: IAxisProperties, margin: IMargin, scrollbarVisible: boolean): void;
export declare function wordBreak(text: Selection<any, any, any, any>, axisProperties: IAxisProperties, maxHeight: number): void;
export declare function clip(text: Selection<any, any, any, any>, availableWidth: number, svgEllipsis: (textElement: SVGTextElement, maxWidth: number) => void): void;
